---
- name: Install Mono {{ item.version_number }}
  vars:
    mono_dir: "{{ common_dir }}/mono"
    mono_module_dir: "{{ common_modules }}/mono"
    url: "{{ item.url }}"
    version_number: "{{ item.version_number }}"
    checksum: "{{ item.checksum }}"
    install_dir: "{{ mono_dir }}/{{ version_number }}"
    unzip_dir: "/dev/shm/mono-{{ version_number }}"
  tags:
    - never
    - mono{{ item.version_number }}

  block:
    - name: Download and install mono {{ version_number }}
      block:
        - name: Download mono {{ version_number }} from {{ url }}
          get_url:
            url: "{{ url }}"
            dest: "{{ common_src }}/mono-{{ version_number }}.tar.xz"
            checksum: "{{ checksum }}"
        - name: Ensure {{ mono_dir }} exists
          file:
            path: "{{ mono_dir }}"
            state: directory
        - name: Uncompress mono
          unarchive:
            src: "{{ common_src }}/mono-{{ version_number }}.tar.xz"
            dest: "/dev/shm"
            creates: "{{ unzip_dir }}"
        - name: Run mono {{ version_number }} configure
          command: "./configure --prefix={{ install_dir }}"
          args:
            chdir: "{{ unzip_dir }}"
            creates: "{{ unzip_dir }}/Makefile"
        - name: Build mono {{ version_number }}
          make:
            chdir: "{{ unzip_dir }}"
          environment:
            MAKEFLAGS: "-j {{ ansible_processor_vcpus }}"
        - name: Install mono {{ version_number }}
          make:
            chdir: "{{ unzip_dir }}"
            target: install

    - name: Install mono {{ version_number }} module
      block:
        - name: Check {{ mono_module_dir }} dir
          file:
            path: "{{ mono_module_dir }}"
            state: directory
            mode: u=rwx,g=rwx,o=rx
        - name: Install mono {{ version_number }} module file
          template:
            src: mono.lua
            dest: "{{ mono_module_dir }}/{{ version_number }}.lua"
